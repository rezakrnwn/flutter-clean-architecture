// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_clean_architecture/test/feature/auth/domain/use_cases/do_login_use_case_test.dart.
// Do not manually edit this file.

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_clean_architecture/feature/auth/domain/entities/user.dart'
    as _i4;
import 'package:flutter_clean_architecture/feature/auth/domain/repositories/auth_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<Exception, _i4.User> getUser(String? username) =>
      (super.noSuchMethod(Invocation.method(#getUser, [username]),
              returnValue: _FakeEither_0<Exception, _i4.User>())
          as _i2.Either<Exception, _i4.User>);
}
